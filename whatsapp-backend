server.js


// importing
import express from 'express'
import mongoose from 'mongoose';
import Messages from './dbMessages.js'
import Pusher from 'pusher';
import cors from 'cors';

// app config
const app = express()
const port = process.env.PORT || 9000;

const pusher = new Pusher({
  appId: '1293024',
  key: 'cec4fc47563484aeefdf',
  secret: 'a43ef26eff8f8141d2d9',
  cluster: 'ap2',
  useTLS: true,
});

const db = mongoose.connection;

db.once("open", () => {
    console.log("DB connected");

    const msgCollection = db.collection('messagecontents');
    
    const changeStream = msgCollection.watch();

    changeStream.on("change", (change) => {
        console.log(change);

        if (change.operationType === 'insert') {
            const messageDetails = change.fullDocument;
            pusher.trigger('message', 'inserted', {
                name: messageDetails.name,
                Messages: messageDetails.message,
                timestamp:messageDetails.timestamp,
            });
        } else {
            console.log("error triggering pusher")
        }
    })
})

// middleware
app.use(express.json())
app.use(cors())


// DB config
// UgTvWMgioBT9wN7I

const connection_url =
    'mongodb+srv://admin:UgTvWMgioBT9wN7I@cluster0.et5nc.mongodb.net/myFirstDatabase?retryWrites=true&w=majority';
  
mongoose.connect(connection_url, {
    useNewUrlParser: true,
    useUnifiedTopology:true
})

// ????


// api routes
app.get('/', (req, res) => res.status(200).send("hello world"));

app.get('/messages/sync', (req, res) => {
    Messages.find((err, data) => {
        if (err) {
            res.status(500).send(err)
        } else {
            res.status(200).send(data)
        }
    })
})

app.post('/messages/new', (req, res) => {
    const dbMessage = req.body

    Messages.create(dbMessage, (err, data) => {
        if (err) {
            res.status(500).send(err)
        } else {
            res.status(201).send(data)
        }
    })
})


// listen
app.listen(port, () => console.log(`Listening on localhost:${port}`));


--------------------------------------------------------------------------------------------------------------------------------------------------------------------------

dbMessages.js

import mongoose from 'mongoose'

const whatsappSchema = mongoose.Schema({
    message: String,
    name: String,
    timestamp: String,
    received:Boolean
})

export default mongoose.model('messagecontent',whatsappSchema)




--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------


package.json


{
  "name": "whatsapp-backend",
  "version": "1.0.0",
  "description": "",
  "main": "server.js",
  "type": "module",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "start": "node server.js"
  },
  "author": "Charani",
  "license": "ISC",
  "dependencies": {
    "cors": "^2.8.5",
    "express": "^4.17.1",
    "mongoose": "^6.0.12",
    "pusher": "^5.0.0"
  }
}


